'''
Задача 1. Сумма чисел (10 баллов)

Напишите функцию summa_n, которая принимает одно целое положительное число N и выводит сумму всех чисел от 1 до N включительно. 

Пример работы программы:

Введите число: 5

Вывести сообщение: Я знаю, что сумма чисел от 1 до 5 равна 15

Реализуйте через цикл while, для выхода из цикла пользователь должен ввести "выход" (5 баллов)
'''
# def summa_n():
#     while True:
#         user_input = input("Введите число или 'выход' для завершения: ")

#         if user_input.lower() == 'выход':
#             print("Программа завершена.")
#             break

#         try:
#             N = int(user_input)
#             if N > 0:
#                 total_sum = sum(range(1, N + 1))
#                 print(f"Я знаю, что сумма чисел от 1 до {N} равна {total_sum}")
#             else:
#                 print("Пожалуйста, введите положительное число.")
#         except ValueError:
#             print("Ошибка: Введите целое положительное число или 'выход'.")

# if __name__ == "__main__":
#     summa_n()

'''
Задача 2. Функция в функции (15 баллов)

Асан проходит специальный тест по программированию. У него всё шло хорошо, пока он не наткнулся на тему «Функции». Задание звучит так:

Основная ветка программы, не считая заголовков функций, состоит из одной строки кода. Это вызов функции test(). В ней запрашивается на ввод целое число. Если оно положительное, то вызывается функция positive(), тело которой содержит команду вывода на экран слова «Положительное». Если число отрицательное, то вызывается функция negative(), её тело содержит выражение вывода на экран слова «Отрицательное».
'''

# def test():
#     number = int(input("Введите целое число: "))
#     if number > 0:
#         positive()
#     elif number < 0:
#         negative()

# def positive():
#     print("Положительное")

# def negative():
#     print("Отрицательное")

# test()

'''
Задача 3. Площади (15 баллов)

Муниципалитет хочет построить необычный парк в одном из районов города. Власти остановились на трёх вариантах: изображение на карте в виде круга, прямоугольника или треугольника. Однако им также нужно понять, какую площадь будет занимать тот или иной вариант при разных значениях.

Напишите программу, которая в зависимости от выбора пользователя вычисляет площадь круга, прямоугольника или треугольника. Для вычисления площади каждой фигуры должна быть написана отдельная функция. (Формулы нахождения площадей попробуйте найти в интернете)))
'''

# import math

# def calculate_circle_area(radius):
#     return math.pi * radius**2

# def calculate_rectangle_area(length, width):
#     return length * width

# def calculate_triangle_area(base, height):
#     return 0.5 * base * height

# def main():
#     print("Выберите фигуру для расчета площади:")
#     print("1. Круг")
#     print("2. Прямоугольник")
#     print("3. Треугольник")

#     choice = int(input("Введите номер выбранной фигуры (1, 2 или 3): "))

#     if choice == 1:
#         radius = float(input("Введите радиус круга: "))
#         area = calculate_circle_area(radius)
#         print(f"Площадь круга: {area}")
#     elif choice == 2:
#         length = float(input("Введите длину прямоугольника: "))
#         width = float(input("Введите ширину прямоугольника: "))
#         area = calculate_rectangle_area(length, width)
#         print(f"Площадь прямоугольника: {area}")
#     elif choice == 3:
#         base = float(input("Введите основание треугольника: "))
#         height = float(input("Введите высоту треугольника: "))
#         area = calculate_triangle_area(base, height)
#         print(f"Площадь треугольника: {area}")
#     else:
#         print("Ошибка: Неверный выбор. Пожалуйста, выберите 1, 2 или 3.")

# if __name__ == "__main__":
#     main()

'''
Задача 4. Число наоборот (15 баллов)

Вводится число. Реализуйте функцию, которая принимает в качестве параметра число, переворачивает его и выводит на экран.

Пример:

Введите число: 1234

Число наоборот: 4321

Введите число: 1993

Число наоборот: 3991

Введите число: 0

Программа завершена! 

Реализовать через цикл while, соответственно для выхода из цикла, пользователь должен будет ввести 0 и вывести сообщение "Программа завершена!" (5 баллов)

Дополнительно: добейтесь такого вывода чисел, в начале которых идут нули

 

Введите число: 1000

Число наоборот: 0001
'''

# def reverse_number(number):
#     reversed_number = 0

#     while number > 0:
#         digit = number % 10
#         reversed_number = reversed_number * 10 + digit
#         number = number // 10

#     return reversed_number

# def main():
#     while True:
#         user_input = int(input("Введите число (для завершения введите 0): "))

#         if user_input == 0:
#             print("Программа завершена!")
#             break

#         reversed_num = reverse_number(user_input)
#         print(f"Число наоборот: {reversed_num}")

# if __name__ == "__main__":
#     main()

'''
Задача 5. Копейки (20 баллов)

На одном складе нашли старые кассовые аппараты, в которых, как выяснилось, до сих пор остались лежать копейки разного достоинства. Даже однокопеечные есть! Все найденные копейки собрали в кучу и закинули в специальное устройство, которое сканирует все монеты и в результате выдаёт, сколько всё это будет в рублях.

Напишите функцию, которая будет считать количество мелких монеток достоинством в 1, 5, 10 и 50 копеек. Функция должна выводить общую сумму.

 

Пример:

Монет по 1 копейке: 3

Монет по 5 копеек: 6

Монет по 10 копеек: 7

Монет по 50 копеек: 2

Всего у нас 2.03 рубля
'''
# ---------------------------------------------------------------------------
# mon1 = int(input('Монет по 1 копейке: '))
# mon2 = int(input('Монет по 5 копеек: '))
# mon3 = int(input('Монет по 10 копеек: '))
# mon4 = int(input('Монет по 50 копеек: '))

# coins = (mon1 * 0.01) + (mon2 * 0.05) + (mon3 * 0.1) + (mon4 * 0.5)

# print(f"Всего у нас {coins:.2f} рубля")
# ---------------------------------------------------------------------------
'''
Задава 6. Калькулятор (продолжение) (15 баллов)

Реализуйте калькулятор из прошлого д/з через функцию
'''

# def calculator(num1, num2, operation):
#     if operation == '*':
#         return num1 * num2
#     elif operation == '+':
#         return num1 + num2
#     elif operation == '-':
#         return num1 - num2
#     elif operation == '/':
#         return num1 / num2
#     elif operation == '%':
#         return num1 % num2
#     elif operation == '//':
#         return num1 // num2
#     elif operation == '**':
#         return num1 ** num2
#     else :
#         return 'tegcg'

# num1 = int(input('Введите первое число: ')) 
# oper = input('оператор: ')
# num2 = int(input('Введите второе число: ')) 

# print(f' {num1} {oper} {num2} = {calculator(num1, num2, oper)}')
